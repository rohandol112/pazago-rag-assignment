# Multi-stage build for optimal production image
FROM node:20-alpine AS deps
WORKDIR /app

# Copy package files and install dependencies
COPY package*.json ./
COPY .npmrc ./
RUN npm install --legacy-peer-deps

# Build stage
FROM node:20-alpine AS builder
WORKDIR /app

# Copy dependencies from deps stage
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Build the application
RUN npm run build

# Production stage
FROM node:20-alpine AS runner
WORKDIR /app

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S mastra -u 1001 -G nodejs

# Copy built application and necessary files
COPY --from=builder --chown=mastra:nodejs /app/.mastra ./.mastra
COPY --from=builder --chown=mastra:nodejs /app/src ./src
COPY --from=builder --chown=mastra:nodejs /app/package*.json ./
COPY --from=builder --chown=mastra:nodejs /app/.npmrc ./

# Install only production dependencies
RUN npm ci --only=production --legacy-peer-deps && \
    npm cache clean --force

# Switch to non-root user
USER mastra

# Expose port
EXPOSE 4111

# Start the application
CMD ["npm", "run", "start"]